---
import Layout from '~/layouts/PageLayout.astro';
import Hero from '~/components/widgets/Hero.astro';
import Features2 from '~/components/widgets/Features2.astro';
import Steps from '~/components/widgets/Steps.astro';
import BlogLatestPosts from '~/components/widgets/BlogLatestPosts.astro';
import FAQs from '~/components/widgets/FAQs.astro';
import CallToAction from '~/components/widgets/CallToAction.astro';
import Button from '~/components/ui/Button.astro';
import { getCollection } from 'astro:content';
import YAML from 'yaml';
import fs from 'fs';
import path from 'path';
import badgePlaceholder from '~/assets/images/badge-placeholder-rect.svg';

// Load site settings
const settingsPath = path.join(process.cwd(), 'src/content/site-settings.yaml');
const settings = YAML.parse(fs.readFileSync(settingsPath, 'utf8'));

// Load content collections - filter for published items
const allServices = await getCollection('services');
const allFaqs = await getCollection('faqs');
const allTrustBadges = await getCollection('trust-badges');

// Filter and sort
const services = allServices.filter(s => s.data.published).sort((a, b) => a.data.order - b.data.order);
const faqs = allFaqs.filter(f => f.data.published).sort((a, b) => a.data.order - b.data.order);
const trustBadges = allTrustBadges.filter(t => t.data.published).sort((a, b) => a.data.order - b.data.order);

// Get first 4 FAQs for homepage
const homepageFaqs = faqs.slice(0, 4);

// Debug - log what we're getting
console.log('Services loaded:', services.length);
console.log('FAQs loaded:', faqs.length);
console.log('Trust badges loaded:', trustBadges.length);

const metadata = {
  title: settings.site.name,
  ignoreTitleTemplate: true,
};
---

<Layout metadata={metadata}>
  <!-- Site Name -->
  <div class="text-center pt-8 pb-0">
    <h1 class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading">
      {settings.site.name}
    </h1>
  </div>

  <!-- Hero Widget -->
  <Hero
    tagline=""
    actions={[
      {
        variant: 'primary',
        text: settings.ctas.primary.text,
        href: settings.ctas.primary.link,
        icon: 'tabler:calendar',
      },
    ]}
    image={{
      src: settings.hero.image,
      alt: 'Hero Image',
    }}
  >
    <Fragment slot="title">
      {settings.hero.text}
    </Fragment>

    <Fragment slot="subtitle">
      <span class="font-semibold">{settings.hero.title}</span>
      <br />
      <span class="text-muted">{settings.hero.subtitle}</span>
    </Fragment>
  </Hero>

  <!-- Secondary CTA -->
  <div class="text-center py-8">
    <Button
      text={settings.ctas.secondary.text}
      href={settings.ctas.secondary.link}
      variant="secondary"
      class="w-auto"
    />
  </div>

  <!-- Trust Badges -->
  <section class="py-12">
    <div class="max-w-6xl mx-auto px-4 sm:px-6">
      <div class="text-center mb-8">
        <p class="text-base text-muted dark:text-slate-400">Professional accreditations and memberships</p>
      </div>
      <div class="flex flex-wrap justify-center items-center gap-8 md:gap-12">
        {trustBadges.map((badge) => (
          <div class="flex items-center gap-3">
            <img 
              src={badgePlaceholder.src} 
              alt={badge.data.alt} 
              class="h-12 w-auto"
            />
            <span class="text-sm font-medium text-gray-700 dark:text-gray-300">
              {badge.data.display_text}
            </span>
          </div>
        ))}
      </div>
    </div>
  </section>

  <!-- How it Works -->
  <Steps
    title={settings.sections.how_it_works}
    items={settings.steps.map((step, index) => ({
      title: `Step ${index + 1}`,
      description: step.text,
      icon: index === 0 ? 'tabler:message-circle' : index === 1 ? 'tabler:clipboard-check' : 'tabler:bulb',
    }))}
  />

  <!-- Services -->
  <Features2
    title={settings.sections.services}
    subtitle=""
    items={services.length > 0 ? services.map((service) => ({
      title: service.data.title,
      description: service.data.description,
      icon: service.data.icon || 'tabler:point',
      callToAction: {
        text: 'Learn more',
        href: `/services#${service.data.anchor}`,
      },
    })) : []}
  />

  <!-- Deep CTA -->
  <CallToAction
    title=""
    subtitle={settings.ctas.deep.lead_text}
    actions={[
      {
        variant: 'primary',
        text: settings.ctas.deep.text,
        href: settings.ctas.deep.link,
        icon: 'tabler:message-circle',
      },
    ]}
  />

  <!-- Blog -->
  <BlogLatestPosts title={settings.sections.blog} information={settings.sections.blog_subtitle} count={4} />

  <!-- FAQs -->
  <FAQs
    title={settings.sections.faqs}
    items={homepageFaqs.length > 0 ? homepageFaqs.map((faq) => ({
      title: faq.data.question,
      description: faq.data.answer,
    })) : []}
  />
  
  <!-- More FAQs Button -->
  {faqs.length > 4 && (
    <div class="text-center py-4 mb-8">
      <Button
        text="More FAQs"
        href="/faq"
        variant="secondary"
        class="w-auto"
      />
    </div>
  )}
</Layout>
