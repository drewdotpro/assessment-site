name: Build and Deploy

on:
  # Trigger on pushes to main branch
  push:
    branches: [main]
  
  # Trigger on pull requests to main branch
  pull_request:
    branches: [main]
  
  # Allow manual workflow dispatch
  workflow_dispatch:

# Prevent concurrent builds to avoid race conditions
# This ensures only one build runs at a time per branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Set default permissions for GitHub token
permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  build:
    name: Build Site
    runs-on: ubuntu-latest
    
    steps:
      # Checkout repository code
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for proper git operations
          fetch-depth: 0
      
      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # Install dependencies
      - name: Install Dependencies
        run: npm ci
      
      # Run checks (linting, type checking, formatting)
      - name: Run Quality Checks
        run: npm run check
        continue-on-error: true # Don't fail build on lint errors during initial setup
      
      # Build the Astro site
      - name: Build Astro Site
        run: npm run build
        env:
          # Add any build-time environment variables here
          NODE_ENV: production
      
      # Upload build artifacts for deployment
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 7
      
      # Add build comment to PR
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const message = `### âœ… Build Successful
            
            The site has been built successfully. 
            
            **Build Details:**
            - Build Time: ${new Date().toISOString()}
            - Commit: ${context.sha.substring(0, 7)}
            - Branch: ${context.ref.replace('refs/heads/', '')}
            
            Preview deployment will be available after merge to main.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            });

  # Deploy to GitHub Pages
  deploy:
    name: Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Lighthouse CI for performance monitoring
  lighthouse:
    name: Lighthouse CI
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      
      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          uploadArtifacts: true
          temporaryPublicStorage: true
          configPath: './.lighthouserc.json'
        continue-on-error: true